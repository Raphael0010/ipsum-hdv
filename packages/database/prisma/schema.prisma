datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics"]
  binaryTargets   = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

model Server {
  id     Int     @unique
  name   String
  prices Price[]
}

model ItemType {
  id          Int            @unique
  name        String         @unique
  superType   ItemSuperType? @relation(fields: [superTypeId], references: [id])
  superTypeId Int?
  items       Item[]
}

model ItemSuperType {
  id        Int        @unique
  name      String     @unique
  itemTypes ItemType[]
}

model Item {
  id         Int      @unique
  name       String
  itemType   ItemType @relation(fields: [itemTypeId], references: [id])
  itemTypeId Int
  prices     Price[]
  iconId     Int

  @@index([name])
}

model Price {
  id        String   @id @default(cuid())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  x1        Int
  x10       Int
  x100      Int
  average   Int
  createdAt DateTime @default(now())
  server    Server   @relation(fields: [serverId], references: [id])
  serverId  Int

  @@index([createdAt, serverId])
}
