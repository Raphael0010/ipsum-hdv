// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "interactiveTransactions", "metrics"]
  binaryTargets   = ["native", "linux-musl"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Server {
  id     Int     @unique
  name   String
  prices Price[]
}

model ItemType {
  id    Int    @unique
  name  String @unique
  items Item[]
}

model Item {
  id         Int      @unique
  name       String
  itemType   ItemType @relation(fields: [itemTypeId], references: [id])
  itemTypeId Int
  prices     Price[]
  iconId     Int

  @@index([name])
}

model Price {
  id        String   @id @default(cuid())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  x1        Int
  x10       Int
  x100      Int
  average   Int
  createdAt DateTime @default(now())
  server    Server   @relation(fields: [serverId], references: [id])
  serverId  Int

  @@index([createdAt, serverId])
}
